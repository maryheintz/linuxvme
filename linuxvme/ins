#!/bin/sh
###############################################################################
#
# Filename: 	ins
# 
# Description:	Shell script to load the Linux VME device driver
#
# $Revision: 1.3 $
#
# $Date: 2005/08/19 10:18:29 $
#
# $Source: z:\\cvsroot/Linuxvme2/linuxvme/ins,v $
#
# Copyright 2000-2005 Concurrent Technologies.
#
###############################################################################

module="vmedriver"
device="vme"
group="users"
version=`uname -r`
kernel=kernel-$version

clear
printf "Loading %s module...\n" $module
case $version in
    2.2.* | 2.4.*) /sbin/insmod $kernel/$module.o || exit 1;;
    2.6.*) /sbin/insmod $kernel/$module.ko resMemSize=8|| exit 1;;
esac

# Other Load Options:
#
# Force module load even if kernel versions don't match.
# /sbin/insmod -f $module.o || exit 1
#
# To override board type auto detection, pass in board name as a module parameter.
# /sbin/insmod $module.o boardName="VP305/01x" || exit 1
#
# Specify reserved memory size in MB's.
# /sbin/insmod $module.o resMemSize=8 || exit 1
# resMemSize values:  = 0  probe for user reserved memory (default)
#                     > 0  number of MB's of user reserved memory
#                     < 0  disabled
#
# Specify the number of VME vectors captured before buffer wraps
# /sbin/insmod $module.o vecBufSize=64 || exit 1
# vecBufSize values:  = 32-128 (default is 32)
#                       When value is > 32 extended vector capture mode
#                       is used.
#
# Change the default free PCI space base address and size for VME PCI window allocation.
# /sbin/insmod $module.o pciAddr=0x80000000 pciSize=0x6400000
#

if [ -d /dev/$device ]
then
    printf "Removing old device files...\n"
    rm -f /dev/$device/ctl
    rm -f /dev/$device/dma
    rm -f /dev/$device/lsi*
    rm -f /dev/$device/vsi*
    rmdir /dev/$device
fi

major=`cat /proc/devices | awk "\\$2==\"$module\" {print \\$1}"`

printf "Creating new device files...\n"
mkdir /dev/$device
mknod /dev/$device/ctl   c $major 0
mknod /dev/$device/lsi0  c $major 1
mknod /dev/$device/lsi1  c $major 2
mknod /dev/$device/lsi2  c $major 3
mknod /dev/$device/lsi3  c $major 4
mknod /dev/$device/lsi4  c $major 5
mknod /dev/$device/lsi5  c $major 6
mknod /dev/$device/lsi6  c $major 7
mknod /dev/$device/lsi7  c $major 8
mknod /dev/$device/vsi0  c $major 9
mknod /dev/$device/vsi1  c $major 10
mknod /dev/$device/vsi2  c $major 11
mknod /dev/$device/vsi3  c $major 12
mknod /dev/$device/vsi4  c $major 13
mknod /dev/$device/vsi5  c $major 14
mknod /dev/$device/vsi6  c $major 15
mknod /dev/$device/vsi7  c $major 16
mknod /dev/$device/dma   c $major 17

# set appropriate group/permissions
chown root /dev/$device
chown root /dev/$device/*
chgrp users /dev/$device
chgrp users /dev/$device/*
chmod 666 /dev/$device/*

printf "Installation complete\n"

