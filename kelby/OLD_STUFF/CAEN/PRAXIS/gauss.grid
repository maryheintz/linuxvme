#include <stdio.h>
#include <math.h>
#include <string.h>
#include <math.h>
#include "machine.h"

extern double tol;
extern int prin, maxfun;
double x[100],y[100];
double t[100],a[100];
double yfit[100],sigmay[100];;
double p[10];
int npnts;
double chisq1;
int prnt;
double functn(),ranf(); 
main(argc,argv,envs)
int argc;
char *argv[];
char *envs[];
  { FILE *fp;
    double xx,yy,dx,r,rn1,rn2;
    double sig,amp,dt,damp,t0,kmean,ksig;
    char xstring[80],ystring[80];
    int i,k,ev,pass,display,i0,i1,i2,i0b,i1b,i2b;
    double p0bst,p1bst,p2bst,x2bst,p0strt,p1strt,p2strt;
    extern double ranf();
    extern double chisqr();
    extern double praxis();
    pass=0;
    damp=0.2;
   prnt=1;
   prin=0;
loop:
   display=1;
   damp = damp+0.2;
   ev=0;
   hstrst();
   hstset(0,25.0,-25.0,100,1);
   hstlbl(0,"amplitude error");
   hstset(1,5.0,-5.0,100,1);
   hstlbl(1,"time error");
   hstset(2,1.0,-1.0,100,1);
   hstlbl(2,"width error");
again:
   ev++;
   if(ev>10) display=0;
   if(prnt==1) printf(" starting ev=%d\n",ev);
   fflush(stdout);
/* generate data points */
   if(display==1)
    { dotzro();
      dotset(0,300.0,100.0,1200.0,0.0,0,0);
    }
   if(prnt==1) printf(" after dotset\n");
   fflush(stdout);
   sig=17.0;
   amp = 1000.0;
   dt = 25.0;
   npnts = 16;
   r = ranf();
   t0 = (7.5+r)*25.0;
   if(prnt==1) printf(" calling gendata\n");
   gendata(t0,damp,dt,npnts,amp,sig);   
   fflush(stdout);
   for(i=0;i<npnts;i++)
     { x[i] = t[i];
       y[i] = a[i];
       if(prnt==1) printf("setup i=%d  x[i]=%f  y[i]=%f   %f\n",i,x[i],y[i],t[i]);
     }
     rannor(&rn1,&rn2);
     p0strt = 1000.0+10.0*rn1;
     rannor(&rn1,&rn2);
     p1strt = t0+2.0*rn1;
     rannor(&rn1,&rn2);
     p2strt = 17.0+1.0*rn1;
     /* do a grid search for the best chisq */
     x2bst = 1.0e10;
     for(i0=0;i0<100;i0++)
       { p[0] = p0strt +(double)(i0-50) * 1.6;
         for(i1=0;i1<100;i1++)
	   { p[1] = p1strt + (double)(i1-50) * 0.16;
	     for(i2=0;i2<100;i2++)
	      { p[2] = p2strt + (double)(i2-50) * 0.08;
	        rn2 = chisqr();
		if(rn2<x2bst)
		  { p0bst = p[0];
		    p1bst = p[1];
		    p2bst = p[2];
		    x2bst = rn2;
		    i0b=i0;
		    i1b=i1;
		    i2b=i2;
		  }
	      }
	   }
       }
     if(prnt==1) printf("  start values p = %f  %f  %f\n",p[0],p[1],p[2]);
     if(prnt==1) printf("grd end values p = %f  %f  %f  %d %d %d\n",p0bst,p1bst,p2bst,i0b,i1b,i2b);
     if(prnt==1) printf(" grid best x2=%f\n",rn2);	
     p[0] = p0bst;
     p[1]=p1bst;
     p[2]=p2bst;
     if(prnt==1) printf(" start values p = %f  %f  %f\n",p[0],p[1],p[2]);
     rn2 = praxis(chisqr,p,3);
     if(prnt==1) printf("   end values p = %f  %f  %f\n",p[0],p[1],p[2]);
     if(prnt==1) printf(" praxis x2=%f\n",rn2);	
     for(i=0;i<1000;i++)
      {xx = (double)i * 0.4;
       yy = functn(xx);
       if(display==1) dotacc(0,xx,yy);
       /* printf(" fit i=%d  xx=%f  yy=%f\n",i,xx,yy);  */
      }
   for(i=0;i<npnts;i++)
     { xx = t[i];
       yy = a[i];
       if(prnt==1) printf(" data points i=%d  t=%f  a=%f\n",i,xx,yy);
       if(display==1)
         { for(k=-5;k<6;k++)
           { dotacc(0,xx+(double)k,yy);
             dotacc(0,xx,yy+10.0*(double)k);
	   }
	 } 
     }
   if(display==1) dotwrt(0);
   hstacc(0,amp-p[0],1.0);
   hstacc(1,t0-p[1],1.0);
   hstacc(2,sig-p[2],1.0);
   if(ev<1000) goto again;
   /* hstwrt(0);
   hstwrt(1);
   hstwrt(2); */
   if(pass==0) printf(" damp       amp mean sig         time mean sig      width mean sig\n");
   printf("%f",damp);
   hstmsg(0,&kmean,&ksig);
   printf("  %f  %f",kmean,ksig);
   hstmsg(1,&kmean,&ksig);
   printf("  %f  %f",kmean,ksig);
   hstmsg(2,&kmean,&ksig);
   printf("  %f  %f     %f  %f  %f  %f\n",kmean,ksig,rn2,p[0],p[1],p[2]);
   pass=1;
   if(damp<5.5) goto loop;
   }  /* end of main */
 double chisqr()
   { int i;
     double chisq1,sdy,dy;
        for(i=0;i<npnts;i++) yfit[i] = functn(x[i]);
           chisq1=0.0;
	   for(i=0;i<npnts;i++) 
	     { if(y[i]<5.0) continue;
	       dy = y[i]-yfit[i];
	       sdy = sigmay[i]; 
	       chisq1 = chisq1 + (dy*dy)/(sdy*sdy);
	     }
	  return(chisq1);
   }
  double functn(double xx)
    { double yft,t1,t2;
      t1 = xx - p[1];
      t2 = 2.0 * p[2]*p[2];
      yft = p[0]*exp(-(t1*t1)/t2);
      /* printf("yft=%f p=%f %f %f\n",yft,p[0],p[1],p[2]); */
      return(yft);
    }
   gendata(double t0,double damp,double dt,int npnts,double amp,double sig)
     { int i,ii;
       double t1,t2,r1,r2,a1,a2,da;
       if(prnt==1) printf(" t0=%f\n",t0);
       if(prnt==1) printf(" damp=%f\n",damp);
       if(prnt==1) printf(" dt=%f\n",dt);
       if(prnt==1) printf(" npnts=%d\n",npnts);
       if(prnt==1) printf(" amp=%f\n",amp);
       if(prnt==1) printf(" sig=%f\n",sig);
       fflush(stdout);
       for(i=0;i<npnts;i++)
         { t[i] = (double)i * dt;
	   t1 = t[i]-t0;
	   t2 = 2.0 * sig*sig;
	   a[i] = amp * exp(-(t1*t1)/t2);
	   a1=a[i];
	   rannor(&r1,&r2);
	   da = damp*r1;
	   a[i] = a[i] + da;
	   ii = (int)a[i];
	   a[i] = (double)ii;
	   a2=a[i];
           /* printf("i=%d  a1=%f  a2=%f  da=%f\n",i,a1,a2,da); */
	   if(prnt==1) printf("gendata i=%d  t[i]=%f  a[i]=%f\n",i,t[i],a[i]);
           fflush(stdout);
	   sigmay[i] = 2.0;
	   if(a[i]>10.0) sigmay[i]=0.5;
	 }
	 return;
     }
      hstfit()
       {return;}
