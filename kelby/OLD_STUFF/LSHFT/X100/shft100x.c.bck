#include <stdio.h>
#include <math.h>
double area[175]=
  {   0.000000,   0.000000,   0.000000,   0.100000,   1.700000,
      8.500000,  27.850000,  63.600000, 119.900000, 193.400000,
    284.350000, 391.900000 ,514.750000, 649.550000, 795.500000,
    958.600000,1124.600000,1299.200000,1477.000000,1662.250000,
   1850.700000,2040.400000,2228.250000,2415.400000,2599.350000,
   2786.900000,2965.450000,3142.850000,3318.900000,3493.000000,
   3658.750000,3820.250000,3974.250000,4119.300000,4264.200000,
   4407.000000,4541.000000,4676.100000,4801.850000,4923.650000,
   5039.000000,5146.450000,5254.350000,5354.400000,5451.500000,
   5548.150000,5633.550000,5716.650000,5796.700000,5871.250000,
   5945.150000,6014.500000,6078.150000,6144.550000,6205.850000,
   6260.850000,6317.150000,6365.100000,6411.800000,6455.400000,
   6497.750000,6538.450000,6578.050000,6612.000000,6646.500000,
   6677.800000,6707.200000,6736.200000,6762.100000,6788.500000,
   6813.100000,6835.050000,6856.800000,6875.150000,6895.300000,
   6912.550000,6928.100000,6943.800000,6958.550000,6972.100000,
   6983.950000,6996.500000,7008.200000,7018.050000,7028.150000,
   7037.950000,7046.150000,7053.150000,7061.250000,7069.200000,
   7076.400000,7083.100000,7088.700000,7094.000000,7099.350000,
   7105.000000,7110.050000,7113.950000,7117.400000,7120.950000,
   7124.150000,7127.200000,7130.350000,7132.950000,7135.100000,
   7137.500000,7140.350000,7143.000000,7144.850000,7146.850000,
   7148.800000,7150.050000,7151.900000,7153.900000,7155.050000,
   7156.100000,7156.950000,7157.800000,7158.750000,7159.650000,
   7160.300000,7161.000000,7161.500000,7161.950000,7162.500000,
   7163.100000,7163.650000,7164.150000,7164.450000,7164.900000,
   7165.400000,7165.800000,7165.950000,7166.100000,7166.400000,
   7166.700000,7166.800000,7167.050000,7167.200000,7167.450000,
   7167.600000,7167.900000,7167.950000,7168.050000,7168.200000,
   7168.450000,7168.450000,7168.500000,7168.600000,7168.750000,
   7168.900000,7168.900000,7168.900000,7168.950000,7169.000000,
   7169.050000,7169.150000,7169.250000,7169.300000,7169.400000,
   7169.550000,7169.550000,7169.600000,7169.600000,7169.650000,
   7169.650000,7169.650000,7169.700000,7169.700000,7169.700000,
   7169.700000,7169.700000,7169.700000,7169.700000,7169.700000};
double xbin[175];
unsigned int sw_base,vme_base;
int ht[5000];
double aht1[5000],aht2[5000],bin[100];
double prob=0.01,offset=100.0,amp=100.0;
double a1,b1,a2,b2,a3,b3;
int ntotal;
main()
{ int i,l,k,ibin;
  double area,x,c1,c2,t1,t2,test,dx,pedmin,pedsum,pedavg;
  unsigned long init[4]={0x123, 0x234, 0x345, 0x456}, length=4;
  init_by_array(init, length); 
  vme_base = vme_a24_base();
  sw_base = vme_base + 0xaa0000;
  x = 0.0;
  c1=(x*x)/762.84;
  t1 = 100.0*exp(-c1);
  printf("g0=%f\n",t1);
  x = 25.0;
  c1=(x*x)/762.84;
  t1 = 100.0*exp(-c1);
  printf("g25=%f\n",t1);
  x = -25.0;
  c1=(x*x)/762.84;
  t1 = 100.0*exp(-c1);
  printf("gm25=%f\n",t1);
  hstset(0,5.0,0.0,200,-5);  
  hstset(1,10.0,0.0,200,-5);  
  hstset(2,100.0,0.0,200,0);  
  hstset(3,100.0,0.0,200,-3);  
  hstset(4,100.0,-100.0,200,0);  
  hstset(5,100.0,-100.0,200,-3);  
  hstset(6,100.0,0.0,200,0);  
  ntotal=0;
again:
        /*========== fill array ================== */
        for(i=0;i<710;i++) hit(i);
        /* ============= now get sums for bit 599 =====*/
       pedmin=1000.0;
       for(ibin=0;ibin<100;ibin++)
        { area=offset;
          i=600+ibin;
          for(k=0;k<605;k++)
            { l=i-599+k;
              x = 25.0*(double)(k-599);
              if(ht[l]>0)
                { c1=(x*x)/762.84;
                  c2=x/6000.0;
                  t1 = aht1[l]*exp(-c1);
	          t2 = aht2[l]*exp(c2);
                  area = area + t1;
		  if(x<0.0) area = area - t2;
		  dx = x;
		  if(dx<0) dx=-dx;
                  if(dx<26.0 && sw(6)==1) 
		    printf("i=%d  k=%d  l=%d  x=%f  c1=%f  c2=%f  t1=%f  t2=%f  area=%f\n",
	             i,k,l,x,c1,c2,t1,t2,area);
                }
           }
	if(area<pedmin) pedmin=area;
        bin[ibin]=area;
	pedsum=pedsum+area;
       }
  pedavg=pedsum/100.0;
  hstacc(6,pedavg,1.0);
  hstacc(2,pedmin,1.0);
  hstacc(3,pedmin,1.0);
  hstacc(4,pedmin,1.0);
  hstacc(5,pedmin,1.0);
  hstacc(6,pedavg,1.0);
  l=ntotal/1000;
  l=1000*l;
  if(l==ntotal)printf("ntotal=%d\n",ntotal);
  ntotal++;
  if(sw(8) == 1) 
   { printf(" hit enter for plots\n");
     sidev(1);
     evdisp();
     sidev(2);
     evdisp();
   }     
  if(sw(7)==1 || ntotal==5000000) 
   { printf(" hit enter for plots\n");
     sidev(1);
     hstwrt(0);
     hstwrt(1);
     hstwrt(2);
     hstwrt(3);
     hstwrt(4);
     hstwrt(5);
     hstwrt(6);
     sidev(2);
     hstwrt(0);
     hstwrt(1);    
     hstwrt(2);
     hstwrt(3);
     hstwrt(4);
     hstwrt(5);
     hstwrt(6);
      if(ntotal==5000000) exit(0);
     printf(" continue\n");
   }
   
  goto again; 
}
  hit(int i)
   { double r,E;
     pick(&E);
     hstacc(0,E,1.0);
     hstacc(1,E,1.0);
     amp = 36.825*E;  /* higain - convert E(GeV) to counts */ 
/*     printf(" in hit E=%f  amp=%f\n",E,amp);  */
     if(E<0.02)
      {ht[i] = 0;
       return(0);
      }
     ht[i]=1;
     aht1[i]=amp;
     aht2[i]=0.00815907*amp;
     return(0);
   }
sw(i)
int i;
{ int k,l,shift;
  unsigned short *adr;
  (unsigned short *)adr = (unsigned short *)(sw_base + 0x0c);
  k = *adr;
  shift = i-1;
  l = (k>>shift) & 1;
  return(l);
}
pick(double *E)
{ int i,k;
  static int ent=0;
  double r,a,dx,da;
  FILE *fp;
  double sum;
  sum=0.0;
  if(ent==0)
   { for(i=0;i<175;i++) xbin[i]=0.725 + (double)i * 0.05;
     ent=1;
   }
   rmt(&r);
   a = 7169.7*r;
   k=0;
   for(i=0;i<175;i++)
    { if(area[i]<a) continue;
      dx=xbin[i]-xbin[i-1];
      da=area[i]-area[i-1];
      *E=xbin[i-1]+(a-area[i-1])*dx/da;
      return(0);
    }
 }
     double hstfit(i,l,x)
    int i,l;
    double x;
    {double y;
     y=90.0*exp(-0.1*x);
     return(y); 
    }  
   evdisp()  
 { int max,mmax,idx,idy,ny,linx,ixbas,iybas,ix,iy,iylst,kx,ky,i,k,ii,iii;
   int idel,kja;
   double dely,y,dy;
   char str[5];
   erasm();
/* ======================= first channel plot kk1 ================== */    
   max = 0;
   for(iii=1; iii<100; iii++) {
   if (max < bin[iii]) max = bin[iii];
   };
   mmax=5000;
   if(max<4000) mmax=4000;
   if(max<3000) mmax=3000;
   if(max<2000) mmax=2000;
   if(max<1000) mmax=1000;
   if(max<800) mmax=800;
   if(max<600) mmax=600;
   if(max<500) mmax=500;
   if(max<400) mmax=400;
   if(max<200) mmax=200;
   if(max<100) mmax=100;
   if(max<50) mmax=50;
   idx = 1600/100;
   linx = idx*100;
   ixbas = 100+(2200-linx)/2;
   dy = 1200.0/(double)mmax;
   iybas = 750;
   mova(ixbas,iybas);
   drwr(linx,0);
   mova(ixbas,iybas);
   iylst = 0;
   for(i=1;i<=100;i++)
    { ii = bin[i];
      y = (double)ii;
      y = y*dy;
      iy = (int)y;
      idy = iy-iylst;
      drwr(0,idy);
      drwr(idx,0);
      iylst=iy;
    }
      drwr(0,-iylst);

/*  label horizontal axis */
    idel=25;
    for(i=0;i<100+2;i=i+idel)
     { ix=ixbas+idx*i;
       mova(ix,iybas);
       drwr(0,-30);
       k=i/2;
       if(k*2 == i)
         { sprintf(str,"%3d",i);
           kx = ix-45;
           if(i<100) kx = ix-55;
           if(i<10) kx=ix-75;
           symb(kx,iybas-110,0.0,str);
         }
     }
/*  label vertical axis  */
    ny=mmax/100;
    if(ny>10) ny=10;
    if(mmax == 1000) ny=5;
    if(mmax == 800) ny=4;
    if(mmax == 600) ny=3;
    if(mmax == 200) ny=4;
    if(mmax == 100) ny=4;
    if(mmax == 50) ny=5;
    y=(double)mmax*dy;
    iy = (int)y;
    mova(ixbas,iybas);
    drwr(0,iy);
    for(i=0;i<=ny;i++)
     { ky = i*mmax/ny;
       y = (double)ky * dy;
       iy = (int)y + iybas;
       mova(ixbas,iy);
       drwr(-20,0);
       sprintf(str,"%4d",ky);
       kx = ixbas-150;
       symb(kx,iy-20,0.0,str);
     }
    /*  print label */
    plotmx(ntotal);
 }

     
      
